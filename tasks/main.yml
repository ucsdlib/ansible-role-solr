---
# tasks file for ucsdlib.solr

- name: Get java version
  command: java -version
  changed_when: false
  check_mode: no
  register: solr_java_version
  failed_when: false

- name: Ensure a java is present
  assert:
    that: solr_java_version.rc == 0
  when: not ansible_check_mode

- name: Install Dependencies
  package:
    name: '{{ item }}'
    state: present
  with_items:
    - lsof

- name: Is Solr Installed Already?
  stat:
    path: '{{ solr_install_dir ~ "/" ~ solr_directory ~ "/bin/solr" }}'
  register: solr_bin
  tags:
    - solr
    - setup

- block:
  - name: "Create Install Directory"
    file:
      path: '{{ solr_install_dir }}'
      state: directory
      owner: root
      group: root
      mode: 0700
    when: false
    tags:
      - solr
      - setup

# TODO: Secure Directory

  - name: Create download Directory
    file:
      path: '{{ solr_download_dir }}/solr'
      state: directory
      mode: 0700
    tags:
      - solr
      - setup

  - name: Check for cached tarball
    stat:
      path: '{{ role_path }}/files/{{ solr_tarball }}'
    register: solr_tgz_cached
    become: false
    connection: local
    tags:
      - solr
      - setup

  - name: "Copy cached tarball file, if available"
    copy:
      src: '{{ solr_tarball }}'
      dest: '{{ solr_download_dir }}/solr'
    when: solr_tgz_cached.stat.exists
    tags:
      - solr
      - setup

  - name: "Download Upstream tarball"
    get_url:
      url: '{{ solr_mirror }}/lucene/solr/{{ solr_version }}/{{ solr_tarball }}'
      dest: '{{ solr_download_dir }}/solr/{{ solr_tarball }}'
      force: yes
    when: not solr_tgz_cached.stat.exists
    tags:
      - solr
      - setup

  - name: Unpack Solr
    unarchive:
      src: '{{ solr_download_dir }}/solr/{{ solr_tarball }}'
      dest: '{{ solr_download_dir }}/solr'
      copy: no
    when: not ansible_check_mode
    tags:
      - solr
      - setup

  - name: Run Solr Installer
    command: >
      {{ solr_download_dir }}/solr/solr-{{ solr_version }}/bin/install_solr_service.sh
        {{ solr_download_dir }}/solr/{{ solr_tarball }}
        -d {{ solr_live_dir }}
        -i {{ solr_install_dir }}
        -p {{ solr_port }}
        -s {{ solr_service_name }}
        -u {{ solr_user }}
        -f
        -n
    args:
      creates: '{{ solr_install_dir }}/bin/solr'
    tags:
      - solr
      - setup

  - name: Remove Install File
    file:
      path: '{{ solr_download_dir }}'
      state: absent
    tags:
      - solr
      - setup

  when: not solr_bin.stat.exists

- name: Set Default Solr
  file:
    path: '{{ solr_install_dir }}/solr'
    src: '{{ solr_install_dir ~ "/" ~ solr_directory }}'
    state: link
  when:
    - solr_set_default
    - not ansible_check_mode
  ignore_errors: '{{ ansible_check_mode }}'
  tags:
    - solr
    - setup

- name: Enable Solr
  service:
    name: solr
    enabled: '{{ solr_enable }}'
  when:
    - ansible_system != "Darwin"
  tags:
    - solr

- name: Start Solr
  service:
    name: solr
    state: started
  when:
    - solr_start
    - ansible_system != "Darwin"
  tags:
    - solr
